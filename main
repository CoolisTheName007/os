os.loadAPI'packages/loadreq/loadreq'
rawset(_G,'require',loadreq.require)
FILE_PATH='os/main'

local string=string

local rawset, rawget,type=rawset, rawget,type

local nativegetmetatable=getmetatable
rawset(_G,'getmetatable',nil)
local function getmetatable(t)
	if type(t)=='string' then
		return string
	else
		return nativegetmetatable(t)
	end
end
rawset(_G,'getmetatable',getmetatable)


local nativesetmetatable = setmetatable
rawset(_G,'setmetatable',nil)
local function setmetatable( _o, _t )
	if _t and type(_t) == "table" then
		local idx = rawget( _t, "__index" )
		local newidx=rawget( _t, "__newindex" )
		rawset(_t,"__index",nil)
		rawset(_t,"__newindex",nil)
		local r= nativesetmetatable( _o, _t )
		rawset(_t,"__index",idx)
		rawset(_t,"__newindex",newidx)
		local meta=getmetatable(_o)
		rawset(meta,"__index",idx)
		rawset(meta,"__newindex",newidx)
		return r
	else
		return nativesetmetatable( _o, _t )
	end
end
rawset(_G,'setmetatable',setmetatable)


local globals={
	stringify=require'utils.stringify'.stringify,
	dprint=require'utils.stringify'.dprint,
	read=require'utils.tab_read',
	pprint=function(...)
		for i=1,select('#',...) do
			print(stringify(select(i,...),nil))
		end
	end,
}

for i,v in pairs(globals) do
	rawset(_G,i,v)
end